// Code generated by MockGen. DO NOT EDIT.
// Source: web.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWebService is a mock of WebService interface.
type MockWebService struct {
	ctrl     *gomock.Controller
	recorder *MockWebServiceMockRecorder
}

// MockWebServiceMockRecorder is the mock recorder for MockWebService.
type MockWebServiceMockRecorder struct {
	mock *MockWebService
}

// NewMockWebService creates a new mock instance.
func NewMockWebService(ctrl *gomock.Controller) *MockWebService {
	mock := &MockWebService{ctrl: ctrl}
	mock.recorder = &MockWebServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebService) EXPECT() *MockWebServiceMockRecorder {
	return m.recorder
}

// Serve mocks base method.
func (m *MockWebService) Serve() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serve")
	ret0, _ := ret[0].(error)
	return ret0
}

// Serve indicates an expected call of Serve.
func (mr *MockWebServiceMockRecorder) Serve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*MockWebService)(nil).Serve))
}
