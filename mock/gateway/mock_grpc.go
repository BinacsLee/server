// Code generated by MockGen. DO NOT EDIT.
// Source: grpc.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGRPCService is a mock of GRPCService interface.
type MockGRPCService struct {
	ctrl     *gomock.Controller
	recorder *MockGRPCServiceMockRecorder
}

// MockGRPCServiceMockRecorder is the mock recorder for MockGRPCService.
type MockGRPCServiceMockRecorder struct {
	mock *MockGRPCService
}

// NewMockGRPCService creates a new mock instance.
func NewMockGRPCService(ctrl *gomock.Controller) *MockGRPCService {
	mock := &MockGRPCService{ctrl: ctrl}
	mock.recorder = &MockGRPCServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGRPCService) EXPECT() *MockGRPCServiceMockRecorder {
	return m.recorder
}

// Serve mocks base method.
func (m *MockGRPCService) Serve() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serve")
	ret0, _ := ret[0].(error)
	return ret0
}

// Serve indicates an expected call of Serve.
func (mr *MockGRPCServiceMockRecorder) Serve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*MockGRPCService)(nil).Serve))
}
